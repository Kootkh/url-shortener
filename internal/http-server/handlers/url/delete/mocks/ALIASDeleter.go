// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ALIASDeleter is an autogenerated mock type for the ALIASDeleter type
type ALIASDeleter struct {
	mock.Mock
}

// DeleteALIAS provides a mock function with given fields: aliasToDelete
func (_m *ALIASDeleter) DeleteALIAS(aliasToDelete string) (int64, error) {
	ret := _m.Called(aliasToDelete)

	if len(ret) == 0 {
		panic("no return value specified for DeleteALIAS")
	}

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (int64, error)); ok {
		return rf(aliasToDelete)
	}
	if rf, ok := ret.Get(0).(func(string) int64); ok {
		r0 = rf(aliasToDelete)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(aliasToDelete)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewALIASDeleter creates a new instance of ALIASDeleter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewALIASDeleter(t interface {
	mock.TestingT
	Cleanup(func())
}) *ALIASDeleter {
	mock := &ALIASDeleter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
